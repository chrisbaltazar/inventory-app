{% extends 'base.html.twig' %}

{% block title %}Asignación {{ user ? user.name : '' }}{% endblock %}

{% block body %}
    {% include 'loan/_return_modal.html.twig' %}

    <div class="container-fluid mt-5">
        <div class="row">
            <h1>Asignación por persona</h1>
            <div class="col-sm-12 my-3">
                <div class="mb-3">
                    <label>Persona</label>
                    <select class="form-control" id="cmbPerson">
                        <option value="">Seleccione...</option>
                        {% for person in users %}
                            <option value="{{ person.id }}" {{ user and person.id is same as user.id ? 'selected' : '' }}>{{ person.name }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="mb-3">
                    {% if openLoans|length %}
                        <h3 class="mb-3">Eventos abiertos</h3>
                        {% for event,item in openLoans %}
                            <div class="card border-warning mb-3 shadow">
                                <div class="card-header">{{ event }}</div>
                                <div class="card-body">
                                    <div class="card-title mb-2">
                                        <h4 class="badge text-bg-primary">Fecha {{ item.data.date }}</h4>
                                        {% if item.data.returnDate %}
                                            <h4 class="badge text-bg-success">Cierre {{ item.data.returnDate }}</h4>
                                        {% endif %}
                                    </div>
                                    <table class="table table-hover">
                                        {% for row in item.rows %}
                                            <tr>
                                                <td>{{ row.region }}</td>
                                                <td>{{ row.item }}</td>
                                                <td>{{ row.info }}</td>
                                                <td>{{ row.startDate }}</td>
                                                <td>{{ row.endDate }}</td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <button type="button" class="btn btn-outline-danger btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                            Entrega
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><button type="button" class="dropdown-item js-close-loan-ok" data-loan-id="{{ row.id }}">Correcto</button></li>
                                                            <li><button type="button" class="dropdown-item js-close-loan-more" data-loan-id="{{ row.id }}">Más...</button></li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                        {% endfor %}
                                    </table>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}

                    {% if closedLoans|length %}
                        <h3 class="mb-3">Eventos cerrados</h3>
                        {% for event,item in closedLoans %}
                            <div class="card border-info mb-3 shadow">
                                <div class="card-header">{{ event }}</div>
                                <div class="card-body">
                                    <div class="card-title mb-2">
                                        <h4 class="badge text-bg-primary">Fecha {{ item.data.date }}</h4>
                                        {% if item.data.returnDate %}
                                            <h4 class="badge text-bg-warning">Cierre {{ item.data.returnDate }}</h4>
                                        {% endif %}
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            {% for row in item.rows %}
                                                <tr class="{{ row.endDate is empty ? 'table-danger' : '' }}">
                                                    <td>{{ row.region }}</td>
                                                    <td>{{ row.item }}</td>
                                                    <td>{{ row.info }}</td>
                                                    <td>{{ row.startDate }}</td>
                                                    <td>{{ row.endDate }}</td>
                                                    <td>
                                                        <button type="button"
                                                                class="btn btn-outline-danger btn-sm js-close-loan"
                                                                data-loan-id="{{ row.id }}">
                                                            Entrega
                                                        </button>
                                                    </td>
                                                </tr>
                                            {% endfor %}
                                        </table>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}

                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('turbo:load', () => {
            document.querySelectorAll('select#cmbPerson').forEach(function (el) {
                if (el.dataset.bound) {
                    return
                }

                el.addEventListener('change', (e) => refreshPage(e.currentTarget.value))

                el.dataset.bound = 'true'
            })

            document.querySelectorAll('form[name="loan_return"]').forEach(function (el) {
                if (el.dataset.bound) {
                    return
                }

                el.addEventListener('submit', async (e) => {
                    e.preventDefault()
                    const data = new FormData(e.currentTarget)
                    await closeLoan(data)
                })

                el.dataset.bound = 'true'
            })

            document.querySelectorAll('.js-close-loan-more').forEach(function (el) {
                if (el.dataset.bound) {
                    return
                }

                el.addEventListener('click', (e) => {
                    const id = e.currentTarget.dataset.loanId
                    document.getElementById('txtLoanId').value = id
                    const modal = new bootstrap.Modal('#modal')
                    modal.show()
                })

                el.dataset.bound = 'true'
            })

            document.querySelectorAll('.js-close-loan-ok').forEach(function (el) {
                if (el.dataset.bound) {
                    return
                }

                el.addEventListener('click', (e) => {
                    const id = e.currentTarget.dataset.loanId
                    const formData = new FormData()
                    formData.append('id', id)
                    formData.append('loan_return[endDate]', '{{ "now"|date("Y-m-d") }}')
                    formData.append('loan_return[status]', 'CORRECTO')
                    closeLoan(formData)
                })

                el.dataset.bound = 'true'
            })
        })

        const refreshPage = (userId) => {
            if (!userId) {
                return
            }
            const url = '{{ path('app_loan_user') }}'
            location.href = url + '/' + userId
        }

        const closeLoan = async (formData) => {
            try {
                const response = await fetch('{{ path('app_loan_update') }}', {
                    method: 'POST',
                    body: formData,
                })

                if (!response.ok) {
                    throw await response.json();
                }

                const data = await response.json();
            } catch (e) {
                // await showError(e.message)
                console.error('Fetch error:', e);
            }
        }
    </script>
{% endblock %}
